// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = libs.versions.kotlin.get()
    ext.compose_compiler_version = libs.versions.composecompiler.get()
    ext.androidx_test_version = libs.versions.androidxtest.get()
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath libs.android.gradle.plugin
        classpath libs.maps.secrets.plugin
        classpath libs.kotlin.gradle.plugin
        classpath libs.dokka.plugin
        classpath libs.jacoco.android.plugin
    }
}

plugins {
    alias libs.plugins.dokka apply true
}

ext.projectArtifactId = { project ->
    if (project.name in ['maps-compose', 'maps-compose-widgets', 'maps-compose-utils']) {
        return project.name
    } else {
        return null
    }
}

allprojects {
    group = 'com.google.maps.android'
    version = '4.3.0'
    project.ext.artifactId = rootProject.ext.projectArtifactId(project)
}

/**
 * Publishing and signing info
 */
subprojects { project ->
    if (project.ext.artifactId == null) return

    apply plugin: 'com.android.library'
    apply plugin: 'com.mxalbert.gradle.jacoco-android'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'signing'

    // Code coverage
    jacoco {
        toolVersion = libs.versions.jacoco.tool.plugin.get()
    }

    tasks.withType(Test).configureEach {
        jacoco.includeNoLocationClasses = true
        jacoco.excludes = ['jdk.internal.*']
    }

    android {
        publishing {
            singleVariant("release") {
                withSourcesJar()
                withJavadocJar()
            }
        }
    }

    publishing {
        publications {
            aar(MavenPublication) {
                afterEvaluate {
                    from components.release
                }

                pom {
                    name = project.name
                    description = "Jetpack Compose components for the Maps SDK for Android"
                    url = "https://github.com/googlemaps/android-maps-compose"
                    scm {
                        connection = 'scm:git@github.com:googlemaps/android-maps-compose.git'
                        developerConnection = 'scm:git@github.com:googlemaps/android-maps-compose.git'
                        url = 'https://github.com/googlemaps/android-maps-compose'
                    }

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution = 'repo'
                        }
                    }

                    organization {
                        name = 'Google Inc'
                        url = 'http://developers.google.com/maps'
                    }

                    developers {
                        developer {
                            name = 'Google Inc.'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                name = "mavencentral"
                url = project.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.aar
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
